$search
$search$model
$search$model[[1]]
[1] 1 3 4

$search$model[[2]]
[1] 1 4 8

$search$model[[3]]
[1] 1 6

$search$model[[4]]
[1] 1 2 8

$search$model[[5]]
[1]  1  2 10

$search$model[[6]]
[1]  1  3 10

$search$model[[7]]
[1] 5 6 7

$search$model[[8]]
[1] 4 5 9

$search$model[[9]]
[1] 5 6 9

$search$model[[10]]
[1]  5 10

$search$model[[11]]
[1] 2 7 8

$search$model[[12]]
[1] 3 7

$search$model[[13]]
[1] 2 8 9

$search$model[[14]]
[1] 3 4 9

$search$model[[15]]
[1] 4 8 9


$search$score
[1] 14344.02

$search$trace
      forward start end    score
 [1,]       1     9   6 17650.90
 [2,]       1     8   1 16273.17
 [3,]       0     9   7 15609.59
 [4,]       0     8   6 15273.28
 [5,]       1     6   5 15022.85
 [6,]       0     6   2 14886.97
 [7,]       1     8   2 14767.79
 [8,]       0     5   1 14665.14
 [9,]       1     9   5 14597.16
[10,]       1     7   5 14546.25
[11,]       0    10   8 14503.31
[12,]       0    10   9 14473.36
[13,]       0     4   2 14444.03
[14,]       0     8   5 14423.92
[15,]       0     5   3 14409.72
[16,]       0    10   7 14396.90
[17,]       1    10   5 14377.94
[18,]       1     7   3 14364.63
[19,]       0    10   6 14355.56
[20,]       1     8   4 14348.79
[21,]       0     7   4 14345.26
[22,]       0     3   2 14344.02

$search$call
gm.search(table = table, adjm = best.neighbor$adjm, forward = forward, 
    backward = backward, score = score)


$call
gm.restart(nstart = 1, prob = 0.75, seed = 2, table = table(rhc.dat), 
    forward = T, backward = T, score = "aic")