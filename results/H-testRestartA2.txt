$search
$search$model
$search$model[[1]]
[1] 1 3 4

$search$model[[2]]
[1]  1  3 10

$search$model[[3]]
[1] 1 6

$search$model[[4]]
[1] 1 2 8

$search$model[[5]]
[1] 1 4 8

$search$model[[6]]
[1]  1  2 10

$search$model[[7]]
[1] 2 7

$search$model[[8]]
[1] 3 4 7

$search$model[[9]]
[1] 5 6 7

$search$model[[10]]
[1] 3 4 9

$search$model[[11]]
[1] 5 6 9

$search$model[[12]]
[1] 2 8 9

$search$model[[13]]
[1] 4 8 9

$search$model[[14]]
[1]  5 10


$search$score
[1] 14341.65

$search$trace
      forward start end    score
 [1,]       1     9   6 17247.25
 [2,]       1     8   1 15592.00
 [3,]       1     6   5 15334.24
 [4,]       1     8   2 15086.95
 [5,]       0    10   7 14934.14
 [6,]       1     9   5 14840.45
 [7,]       0     9   7 14806.23
 [8,]       1     9   2 14725.50
 [9,]       1     7   5 14646.97
[10,]       0    10   9 14596.49
[11,]       0     6   2 14566.73
[12,]       1     2   1 14476.85
[13,]       0     4   2 14447.70
[14,]       0     5   1 14420.08
[15,]       0    10   8 14398.95
[16,]       1    10   5 14382.93
[17,]       0    10   6 14374.61
[18,]       0     5   3 14366.97
[19,]       1     7   3 14353.19
[20,]       1     8   4 14346.12
[21,]       0     8   7 14342.94
[22,]       0     3   2 14341.65

$search$call
gm.search(table = table, adjm = best.neighbor$adjm, forward = forward, 
    backward = backward, score = score)


$call
gm.restart(nstart = 3, prob = 0.5, seed = 2, table = table(rhc.dat), 
    forward = T, backward = T, score = "aic")
