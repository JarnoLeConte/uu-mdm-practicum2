$search
$search$model
$search$model[[1]]
[1]  1  3 10

$search$model[[2]]
[1] 1 8

$search$model[[3]]
[1] 1 9

$search$model[[4]]
[1] 2 7

$search$model[[5]]
[1] 2 8

$search$model[[6]]
[1] 2 9

$search$model[[7]]
[1]  2 10

$search$model[[8]]
[1] 5 7

$search$model[[9]]
[1] 5 9

$search$model[[10]]
[1]  5 10

$search$model[[11]]
[1] 3 6

$search$model[[12]]
[1] 4 6

$search$model[[13]]
[1] 6 7

$search$model[[14]]
[1] 6 8

$search$model[[15]]
[1] 6 9


$search$score
[1] 15783.74

$search$trace
      forward start end    score
 [1,]       0     6   1 19381.33
 [2,]       0     7   1 18135.90
 [3,]       1     7   6 17767.04
 [4,]       0     9   7 17082.10
 [5,]       0     8   7 16809.84
 [6,]       0     6   2 16589.04
 [7,]       1     8   2 16359.42
 [8,]       0     6   3 16157.92
 [9,]       0     5   3 16087.85
[10,]       0     4   2 16062.12
[11,]       0    10   6 16045.78
[12,]       1    10   5 16024.53
[13,]       1     3   1 16015.38
[14,]       0     9   3 15806.39
[15,]       1     6   3 15800.46
[16,]       0     8   4 15797.36
[17,]       1     6   4 15787.24
[18,]       0    10   4 15785.21
[19,]       1     7   2 15783.74

$search$call
gm.search(table = table, adjm = best.neighbor$adjm, forward = forward, 
    backward = backward, score = score)


$call
gm.restart(nstart = 9, prob = 0.5, seed = 2, table = table(rhc.dat), 
    forward = T, backward = T, score = "bic")