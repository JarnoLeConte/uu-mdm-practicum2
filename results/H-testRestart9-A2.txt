$search
$search$model
$search$model[[1]]
[1] 1 2 8

$search$model[[2]]
[1] 1 2 9

$search$model[[3]]
[1]  1  2 10

$search$model[[4]]
[1] 1 3 4

$search$model[[5]]
[1] 1 3 9

$search$model[[6]]
[1]  1  3 10

$search$model[[7]]
[1] 1 4 8

$search$model[[8]]
[1] 2 7

$search$model[[9]]
[1] 3 7

$search$model[[10]]
[1] 4 5 6

$search$model[[11]]
[1] 5 6 7

$search$model[[12]]
[1] 5 6 9

$search$model[[13]]
[1]  5  6 10

$search$model[[14]]
[1] 4 6 8


$search$score
[1] 14263.97

$search$trace
      forward start end    score
 [1,]       1     7   6 16031.05
 [2,]       1     3   1 15611.51
 [3,]       1     9   2 15381.19
 [4,]       1     6   5 15184.93
 [5,]       1    10   3 15029.66
 [6,]       1     9   1 14909.00
 [7,]       0     7   1 14781.39
 [8,]       1     8   2 14674.95
 [9,]       0     3   2 14629.45
[10,]       1     6   4 14589.59
[11,]       0     9   7 14555.36
[12,]       1     7   5 14494.37
[13,]       1     4   1 14461.09
[14,]       1    10   5 14432.26
[15,]       0    10   8 14409.60
[16,]       0     4   2 14387.37
[17,]       1     7   3 14372.08
[18,]       0    10   4 14365.15
[19,]       0     5   2 14358.44
[20,]       1     7   2 14338.51
[21,]       0     8   5 14334.18
[22,]       1     8   6 14312.25
[23,]       0     8   7 14279.23
[24,]       1     8   4 14266.11
[25,]       1    10   6 14263.97

$search$call
gm.search(table = table, adjm = best.neighbor$adjm, forward = forward, 
    backward = backward, score = score)


$call
gm.restart(nstart = 9, prob = 0.5, seed = 2, table = table(rhc.dat), 
    forward = T, backward = T, score = "aic")