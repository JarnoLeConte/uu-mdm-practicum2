> testRHC2()
$search
$search$model
$search$model[[1]]
[1]  1  3 10

$search$model[[2]]
[1] 1 8

$search$model[[3]]
[1] 2 7

$search$model[[4]]
[1] 2 8

$search$model[[5]]
[1] 2 9

$search$model[[6]]
[1]  2 10

$search$model[[7]]
[1] 3 4

$search$model[[8]]
[1] 4 6

$search$model[[9]]
[1] 5 7

$search$model[[10]]
[1] 5 9

$search$model[[11]]
[1]  5 10

$search$model[[12]]
[1] 6 7

$search$model[[13]]
[1] 6 8

$search$model[[14]]
[1] 3 9

$search$model[[15]]
[1] 6 9


$search$score
[1] 15850.53

$search$trace
      forward start end     score
 [1,]       0     6   1 352418.67
 [2,]       0     9   7 145996.05
 [3,]       0     8   5  85022.56
 [4,]       0     2   1  64150.58
 [5,]       0     4   3  51172.69
 [6,]       0     6   2  41682.01
 [7,]       0    10   1  34213.22
 [8,]       0    10   6  29598.23
 [9,]       0     9   1  26137.86
[10,]       0     7   1  23410.33
[11,]       0     8   6  21604.37
[12,]       0     6   5  19937.64
[13,]       0    10   9  19036.88
[14,]       0    10   7  18358.74
[15,]       0     5   2  17953.09
[16,]       0     8   3  17582.91
[17,]       0     8   4  17231.89
[18,]       0     5   1  16916.77
[19,]       0     6   3  16633.86
[20,]       0     6   4  16404.68
[21,]       0     5   3  16269.59
[22,]       0     5   4  16145.29
[23,]       0     7   2  16062.76
[24,]       0     9   8  16011.30
[25,]       0     4   2  15969.11
[26,]       0     3   2  15935.30
[27,]       0     8   7  15913.10
[28,]       0     4   1  15903.07
[29,]       0     7   3  15897.47
[30,]       0     7   4  15892.60
[31,]       1     8   6  15889.27
[32,]       0     9   4  15886.83
[33,]       1     6   4  15876.29
[34,]       0    10   8  15873.92
[35,]       1    10   1  15856.19
[36,]       0    10   4  15854.62
[37,]       1     4   3  15851.79
[38,]       1     7   2  15850.53

$search$call
gm.search(table = table, adjm = best.neighbor$adjm, forward = forward, 
    backward = backward, score = score)


$call
gm.restart(nstart = 1, prob = 1, seed = 2, table = table(rhc.dat), 
    forward = T, backward = T, score = "bic")
