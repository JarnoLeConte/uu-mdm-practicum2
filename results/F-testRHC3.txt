> testRHC3()
$search
$search$model
$search$model[[1]]
[1] 1 2 8

$search$model[[2]]
[1] 1 2 9

$search$model[[3]]
[1]  1  2 10

$search$model[[4]]
[1] 1 3 9

$search$model[[5]]
[1]  1  3 10

$search$model[[6]]
[1] 1 4 8

$search$model[[7]]
[1]  1  4 10

$search$model[[8]]
[1] 4 5 6

$search$model[[9]]
[1]  4  5 10

$search$model[[10]]
[1] 5 6 7

$search$model[[11]]
[1] 5 6 9

$search$model[[12]]
[1] 3 6 9

$search$model[[13]]
[1] 4 6 8

$search$model[[14]]
[1] 2 7


$search$score
[1] 14278.21

$search$trace
      forward start end    score
 [1,]       1     9   6 19813.67
 [2,]       1     8   1 18128.65
 [3,]       1     7   6 16781.55
 [4,]       1     3   1 16361.47
 [5,]       1     6   5 16055.14
 [6,]       1     9   1 15769.28
 [7,]       1     8   2 15515.52
 [8,]       1    10   3 15269.86
 [9,]       1     9   2 15025.03
[10,]       1    10   1 14894.94
[11,]       1     2   1 14771.25
[12,]       1     9   5 14678.39
[13,]       1     7   5 14602.40
[14,]       1     8   6 14534.46
[15,]       1     6   4 14490.42
[16,]       1     4   1 14446.97
[17,]       1     6   3 14406.89
[18,]       1    10   2 14366.82
[19,]       1    10   5 14336.01
[20,]       1     7   2 14314.87
[21,]       1    10   4 14300.21
[22,]       1     8   4 14286.40
[23,]       1     5   4 14280.03
[24,]       1     9   3 14278.21

$search$call
gm.search(table = table, adjm = best.neighbor$adjm, forward = forward, 
    backward = backward, score = score)


$call
gm.restart(nstart = 1, prob = 0, seed = 2, table = table(rhc.dat), 
    forward = T, backward = T, score = "aic")
