$search
$search$model
$search$model[[1]]
[1]  1  3 10

$search$model[[2]]
[1] 3 6

$search$model[[3]]
[1] 4 6

$search$model[[4]]
[1] 2 7

$search$model[[5]]
[1] 5 7

$search$model[[6]]
[1] 6 7

$search$model[[7]]
[1] 1 8

$search$model[[8]]
[1] 2 8

$search$model[[9]]
[1] 6 8

$search$model[[10]]
[1] 1 9

$search$model[[11]]
[1] 2 9

$search$model[[12]]
[1] 5 9

$search$model[[13]]
[1] 6 9

$search$model[[14]]
[1]  2 10

$search$model[[15]]
[1]  5 10


$search$score
[1] 15783.74

$search$trace
      forward start end    score
 [1,]       1     7   6 18326.02
 [2,]       0     9   7 17812.65
 [3,]       0    10   6 17364.69
 [4,]       1    10   3 17118.97
 [5,]       1     8   2 16960.76
 [6,]       1     9   2 16804.67
 [7,]       0    10   8 16660.63
 [8,]       1     3   1 16550.42
 [9,]       0     8   3 16419.12
[10,]       0     5   2 16309.15
[11,]       1     9   5 16196.14
[12,]       0    10   9 16070.08
[13,]       0     8   7 15990.57
[14,]       0     6   1 15949.11
[15,]       1     9   1 15854.43
[16,]       0     4   2 15828.45
[17,]       0    10   4 15811.07
[18,]       1     6   4 15802.44
[19,]       1     6   3 15797.25
[20,]       0     7   2 15792.90
[21,]       0     8   4 15789.73
[22,]       0     5   4 15787.37
[23,]       1     8   6 15785.21
[24,]       1     7   2 15783.74

$search$call
gm.search(table = table, adjm = best.neighbor$adjm, forward = forward, 
    backward = backward, score = score)


$call
gm.restart(nstart = 3, prob = 0.5, seed = 2, table = table(rhc.dat), 
    forward = T, backward = T, score = "bic")