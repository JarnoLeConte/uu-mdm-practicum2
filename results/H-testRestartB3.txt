$search
$search$model
$search$model[[1]]
[1] 3 4

$search$model[[2]]
[1] 4 6

$search$model[[3]]
[1] 6 7

$search$model[[4]]
[1] 6 8

$search$model[[5]]
[1] 6 9

$search$model[[6]]
[1] 2 7

$search$model[[7]]
[1] 5 7

$search$model[[8]]
[1] 1 8

$search$model[[9]]
[1] 2 8

$search$model[[10]]
[1] 2 9

$search$model[[11]]
[1] 3 9

$search$model[[12]]
[1] 5 9

$search$model[[13]]
[1]  1  3 10

$search$model[[14]]
[1]  2 10

$search$model[[15]]
[1]  5 10


$search$score
[1] 15850.53

$search$trace
      forward start end    score
 [1,]       0     6   1 20028.30
 [2,]       0     6   2 18707.85
 [3,]       0     8   7 18021.67
 [4,]       0     9   7 17408.90
 [5,]       0    10   8 16921.08
 [6,]       0    10   9 16683.16
 [7,]       0     4   1 16518.86
 [8,]       0     7   1 16387.07
 [9,]       0     8   3 16255.47
[10,]       0     5   2 16145.42
[11,]       1     9   5 16025.35
[12,]       0     5   3 15938.05
[13,]       0    10   6 15910.85
[14,]       0     4   2 15884.91
[15,]       0    10   4 15867.53
[16,]       0     8   4 15864.29
[17,]       1     6   4 15855.70
[18,]       1     4   3 15853.20
[19,]       0     5   4 15850.53

$search$call
gm.search(table = table, adjm = best.neighbor$adjm, forward = forward, 
    backward = backward, score = score)


$call
gm.restart(nstart = 3, prob = 0.75, seed = 2, table = table(rhc.dat), 
    forward = T, backward = T, score = "bic")